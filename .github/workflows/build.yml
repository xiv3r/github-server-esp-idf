name: Build Firmware

on:
  workflow_dispatch:
  release:
    types: [published]  
    
jobs:
  download-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download files
      run: |
        sudo apt update
        sudo apt install git wget flex bison gperf python3 python3-pip python3-setuptools cmake ninja-build ccache libffi-dev libssl-dev dfu-util libusb-1.0-0 -y      
    
    - name: Clone the Repository
      run: |
        git clone --recursive https://github.com/espressif/esp-idf.git
        cd esp-idf
        ./install.sh esp32,esp8266
        source export.sh
    
    - name: Determine release tag
      id: get_tag
      run: |
        if [ "${{ github.event_name }}" == "release" ]; then
          TAG_NAME="${{ github.event.release.tag_name }}"
        else
          TAG_NAME="firmware"
        fi
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

    - name: Delete existing release assets
      uses: actions/github-script@v7
      with:
        script: |
          const { data: releases } = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          
          const targetRelease = releases.find(release => release.tag_name === '${{ steps.get_tag.outputs.tag_name }}');
          
          if (targetRelease) {
            console.log(`Found release with tag: ${{ steps.get_tag.outputs.tag_name }}`);
            console.log(`Release ID: ${targetRelease.id}`);
            
            const { data: assets } = await github.rest.repos.listReleaseAssets({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: targetRelease.id
            });
            
            console.log(`Found ${assets.length} assets to delete`);
            
            for (const asset of assets) {
              console.log(`Deleting asset: ${asset.name} (ID: ${asset.id})`);
              await github.rest.repos.deleteReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                asset_id: asset.id
              });
            }
            
            console.log('All existing assets deleted');
          } else {
            console.log(`No release found with tag: ${{ steps.get_tag.outputs.tag_name }}`);
          }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload files to existing release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_tag.outputs.tag_name }}
        files: |
          downloads/esp-idf/*.bin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
